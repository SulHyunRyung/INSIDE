package dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import model.Member;
import util.DBconn;
import util.OracleQuery;

public class MemberDAOImple implements MemberDAO {

	@Override
	public boolean insertMember(Member member) {
	    String sqlInsert = "INSERT INTO " + 
	            OracleQuery.MEMBER_TABLE + " (" + 
	            OracleQuery.COL_UID + ", " +
	            OracleQuery.COL_USER_NAME + ", " +
	            OracleQuery.COL_USER_ID + ", " +
	            OracleQuery.COL_USER_PW + ", " +
	            OracleQuery.COL_USER_EMAIL + ", " + 
	            OracleQuery.COL_REG_DATE + 
	            ") VALUES (CONCAT('U', LPAD(MEMBER_SEQ.NEXTVAL, 6, '0')), ?, ?, ?, ?, SYSDATE)";

		try (Connection conn = DBconn.connectDB()) {
            conn.setAutoCommit(false);
			try (PreparedStatement pstmt = conn.prepareStatement(sqlInsert)) {
				pstmt.setString(1, member.getUserName());
				pstmt.setString(2, member.getUserId());
				pstmt.setString(3, member.getUserPw());
				pstmt.setString(4, member.getUserEmail());
				int pstmtResult = pstmt.executeUpdate();
                conn.commit();
				return pstmtResult > 0;
			} catch (SQLException e) {
				conn.rollback();
				e.printStackTrace();
				return false;
			}
		} catch (SQLException e) {
			e.printStackTrace();
			return false;
		}
	} // End insertMember

    @Override
    public boolean updateMember(Member member) { 
        String sqlUpdate = "UPDATE " +
                OracleQuery.MEMBER_TABLE + " SET " +
                OracleQuery.COL_USER_NAME + " = ?, " +
                OracleQuery.COL_USER_PW + " = ?, " +
                OracleQuery.COL_USER_EMAIL + " = ?, " +
                OracleQuery.COL_INFO_UPDATE_DATE + " = SYSDATE WHERE " +
                OracleQuery.COL_UID + " = ?";
       
        try (Connection conn = DBconn.connectDB()) {
            conn.setAutoCommit(false);
            try (PreparedStatement pstmt = conn.prepareStatement(sqlUpdate)) {
                pstmt.setString(1, member.getUserName());
                pstmt.setString(2, member.getUserPw());
                pstmt.setString(3, member.getUserEmail());
                pstmt.setString(4, member.getUid());
                int rowsUpdated = pstmt.executeUpdate();
                conn.commit();
                return rowsUpdated > 0; 
            } catch (SQLException e) {
                conn.rollback();
                e.printStackTrace();
                return false;
            }
        } catch (SQLException e) {
            e.printStackTrace();
            return false;
        }
    } // End updateMember

    @Override
    public boolean deleteMember(String uid) {
        String sqlDelete = "DELETE FROM " + 
        		OracleQuery.MEMBER_TABLE + " WHERE " + 
        		OracleQuery.COL_UID + " = ?";

        try (Connection conn = DBconn.connectDB()) {
            conn.setAutoCommit(false);
            try (PreparedStatement pstmt = conn.prepareStatement(sqlDelete)) {
                pstmt.setString(1, uid);
                int rowsDeleted = pstmt.executeUpdate();
                conn.commit();
                return rowsDeleted > 0; 
            } catch (SQLException e) {
                conn.rollback();
                e.printStackTrace();
                return false;
            }
        } catch (SQLException e) {
            e.printStackTrace();
            return false;
        }
    } // End deleteMember
}

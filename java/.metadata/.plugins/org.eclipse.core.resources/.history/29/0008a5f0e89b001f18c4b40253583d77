package gui;

import javax.swing.*;
import model.Member;
import dao.MemberDAOImpl;
import util.UserExists;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

public class RegFrame extends JFrame {
    private static final long serialVersionUID = 1L;
    private JTextField userNameField;
    private JTextField userIdField;
    private JPasswordField passwordField;
    private JTextField emailField;

    public RegFrame() {
        setTitle("회원가입");
        setSize(300, 200);
        setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        setLocationRelativeTo(null);
        setLayout(new GridLayout(5, 2));

        userNameField = new JTextField();
        userIdField = new JTextField();
        passwordField = new JPasswordField();
        emailField = new JTextField();

        JButton registerButton = new JButton("회원가입");

        add(new JLabel("이름:"));
        add(userNameField);
        add(new JLabel("아이디:"));
        add(userIdField);
        add(new JLabel("비밀번호:"));
        add(passwordField);
        add(new JLabel("이메일:"));
        add(emailField);
        add(registerButton);
        
        this.setFocusable(true);  
        this.requestFocusInWindow();
        
        // ESC 키를 눌렀을 때 확인창 띄우기
        this.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_ESCAPE) {
                    int result = JOptionPane.showConfirmDialog(RegFrame.this, 
                        "정말로 창을 닫으시겠습니까?", "창 닫기 확인", 
                        JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
                    if (result == JOptionPane.YES_OPTION) {
                        dispose();  // 창 닫기
                    }
                }
            }
        });

        // 창을 닫을 때에도 확인 메시지 띄우기
        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                int result = JOptionPane.showConfirmDialog(RegFrame.this, 
                    "정말로 창을 닫으시겠습니까?", "창 닫기 확인", 
                    JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
                if (result == JOptionPane.YES_OPTION) {
                    dispose();  // 창 닫기
                }
            }
        });

        // 이름 타이핑 글자 수 체크
        userNameField.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                if (userNameField.getText().length() >= 25) {
                    e.consume();
                    JOptionPane.showMessageDialog(RegFrame.this, "이름은 25글자 이하로 입력해주세요.");
                }
            }
        });

        // 아이디 타이핑 글자 수 체크
        userIdField.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                if (userIdField.getText().length() >= 20) {
                    e.consume();
                    JOptionPane.showMessageDialog(RegFrame.this, "ID는 영 대·소문자, 숫자 조합으로 20자 이하로 입력해주세요.");
                }
            }
        });

        // 비밀번호 타이핑 글자 수 체크
        passwordField.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                if (passwordField.getPassword().length >= 60) {
                    e.consume();
                    JOptionPane.showMessageDialog(RegFrame.this, "비밀번호는 60자 이하로 입력해주세요.");
                }
            }
        });

        // 이메일 타이핑 글자 수 체크
        emailField.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                if (emailField.getText().length() >= 50) {
                    e.consume();
                    JOptionPane.showMessageDialog(RegFrame.this, "이메일은 50자 이하로 입력해주세요.");
                }
            }
        });

        registerButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // 회원가입 전에 모든 필드의 길이를 체크
                String userName = userNameField.getText().trim();
                String userId = userIdField.getText().trim();
                String password = new String(passwordField.getPassword()).trim();
                String email = emailField.getText().trim();

                if (userName.length() > 25) {
                    JOptionPane.showMessageDialog(RegFrame.this, "이름은 25글자 이하로 입력해주세요.");
                    return;
                }
                if (userId.length() > 20) {
                    JOptionPane.showMessageDialog(RegFrame.this, "ID는 영 대·소문자, 숫자 조합으로 20자 이하로 입력해주세요.");
                    return;
                }
                if (password.length() > 60) {
                    JOptionPane.showMessageDialog(RegFrame.this, "비밀번호는 60자 이하로 입력해주세요.");
                    return;
                }
                if (email.length() > 50) {
                    JOptionPane.showMessageDialog(RegFrame.this, "이메일은 50자 이하로 입력해주세요.");
                    return;
                }

                registerMember(); 
            }
        });

        setVisible(true);
    }

    private void registerMember() {
        String userName = userNameField.getText().trim();
        String userId = userIdField.getText().trim();
        String password = new String(passwordField.getPassword()).trim();
        String email = emailField.getText().trim();

        // 빈 필드 체크
        if (userName.isEmpty()) {
            JOptionPane.showMessageDialog(this, "이름을 입력하세요.");
            return;
        } else if (userId.isEmpty()) {
            JOptionPane.showMessageDialog(this, "아이디를 입력하세요.");
            return;
        } else if (password.isEmpty()) {
            JOptionPane.showMessageDialog(this, "비밀번호를 입력하세요.");
            return;
        } else if (email.isEmpty()) {
            JOptionPane.showMessageDialog(this, "이메일을 입력하세요.");
            return;
        }

        // 중복 체크
        UserExists userExists = new UserExists();
        if (userExists.isUserIdExists(userId)) {
            JOptionPane.showMessageDialog(this, "이미 존재하는 아이디입니다.");
            return;
        }

        if (userExists.isUserEmailExists(email)) {
            JOptionPane.showMessageDialog(this, "이미 존재하는 이메일입니다.");
            return;
        }

        Member newMember = new Member();
        newMember.setUserName(userName);
        newMember.setUserId(userId);
        newMember.setUserPw(password);
        newMember.setUserEmail(email);

        MemberDAOImpl memberDAO = new MemberDAOImpl();
        if (memberDAO.insertMember(newMember)) {
            JOptionPane.showMessageDialog(this, "회원가입에 성공했습니다. 다시 로그인해주세요.");
            dispose();
        } else {
            JOptionPane.showMessageDialog(this, "회원가입 실패. 다시 시도하세요.");
        }
    }
}
